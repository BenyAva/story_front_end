{"ast":null,"code":"var _jsxFileName = \"/Users/Beny/dev/story_project/story_front_end/story/src/components/Bottom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Bottom = _ref => {\n  _s();\n  let {\n    setPage,\n    page,\n    health,\n    setAccuracy,\n    setAttack,\n    setHealth,\n    attack,\n    accuracy,\n    gold,\n    setGold,\n    villains,\n    setVillains,\n    items,\n    setItems,\n    level,\n    setLevel,\n    choice,\n    setChoice,\n    inventory,\n    setInventory\n  } = _ref;\n  const [delayed, setDelayed] = useState(false);\n  const showPage = () => {\n    setPage(false);\n    console.log(setPage);\n  };\n  const showStory = () => {\n    setPage(true);\n    console.log(setPage);\n  };\n  const makeChoice = number => {\n    console.log(number);\n    setChoice(number);\n    console.log(choice);\n  };\n  const currentLevel = number => {\n    setLevel(number);\n  };\n  const storyResult = () => {\n    if (level === 1 && choice === 1) {\n      setAttack(attack - 2);\n      console.log(attack);\n    } else if (level === 1 && choice === 2) {\n      setAttack(attack + 5);\n      setHealth(health + 10);\n      setGold(gold + 10);\n    }\n  };\n  const handleBattle = () => {\n    const villain = villains[0];\n    let villainHealth = villain[1];\n    const villainAttack = villain[2];\n\n    // Simulating battle calculations\n    while (villainHealth > 0 && health > 0) {\n      if (Math.random() < accuracy) {\n        villainHealth -= attack;\n      }\n      health -= villainAttack;\n    }\n\n    // Updating villain's health in state\n    setVillains(prevVillains => {\n      const newVillains = [...prevVillains];\n      newVillains[0] = [villain[0], villainHealth, villainAttack];\n      return newVillains;\n    });\n\n    // Check if user won the battle\n    if (health > 0) {\n      // User won the battle, give them a \"Potion of Health\" item\n      const potionIndex = items.findIndex(item => item[0] === \"Potion of Health\");\n      if (potionIndex !== -1) {\n        setItems(prevItems => {\n          const newItems = [...prevItems];\n          newItems.splice(potionIndex, 1);\n          return newItems;\n        });\n        setHealth(health + items[potionIndex][1]);\n      }\n    }\n  };\n  useEffect(() => {\n    if (delayed) {\n      setTimeout(() => storyResult(), 1000);\n    }\n  }, [delayed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Bottom\",\n    children: [level === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        currentLevel(1);\n      },\n      children: \"Begin Quest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : null, level === 1 && choice === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setChoice(1);\n          setDelayed(true);\n        },\n        children: \"Choice One\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          makeChoice(2);\n          setDelayed(true);\n        },\n        children: \"Choice Two\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : null, level === 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        currentLevel(2);\n        setChoice(0);\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : null, level === 2 && choice === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setChoice(1);\n          setDelayed(true);\n        },\n        children: \"Choice One\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          makeChoice(2);\n          setDelayed(true);\n        },\n        children: \"Choice Two\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : null, level === 2 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        currentLevel(3);\n        setChoice(0);\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : null, level === 3 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBattle,\n      children: \" Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Bottom, \"SQqV7xYXqYbhcUhADfdA54GY0PA=\");\n_c = Bottom;\nexport default Bottom;\nvar _c;\n$RefreshReg$(_c, \"Bottom\");","map":{"version":3,"names":["React","useState","useEffect","Bottom","setPage","page","health","setAccuracy","setAttack","setHealth","attack","accuracy","gold","setGold","villains","setVillains","items","setItems","level","setLevel","choice","setChoice","inventory","setInventory","delayed","setDelayed","showPage","console","log","showStory","makeChoice","number","currentLevel","storyResult","handleBattle","villain","villainHealth","villainAttack","Math","random","prevVillains","newVillains","potionIndex","findIndex","item","prevItems","newItems","splice","setTimeout"],"sources":["/Users/Beny/dev/story_project/story_front_end/story/src/components/Bottom.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\ninterface Props {\n  setPage: React.Dispatch<React.SetStateAction<boolean>>\n  page: boolean\n  health: number\n  setHealth:React.Dispatch<React.SetStateAction<number>>\n  attack: number\n  setAttack :React.Dispatch<React.SetStateAction<number>>\n  accuracy: number\n  setAccuracy: React.Dispatch<React.SetStateAction<number>>\n  gold: number\n  setGold: React.Dispatch<React.SetStateAction<number>>\n  villains: [string, number, number][]\n  setVillains: React.Dispatch<React.SetStateAction<[string, number, number][]>>\n  items: [string, number, number][]\n  setItems: React.Dispatch<React.SetStateAction<[string, number, number][]>>\n  level: number\n  setLevel: React.Dispatch<React.SetStateAction<number>>\n  choice: number\n  setChoice: React.Dispatch<React.SetStateAction<number>>\n  inventory: [string, number][]\n  setInventory: React.Dispatch<React.SetStateAction<[string, number][]>>\n\n}\nconst Bottom: React.FC<Props> = ({ setPage, page,health,setAccuracy,setAttack,setHealth,attack,accuracy,gold,setGold,villains,setVillains,items,setItems,level,setLevel,choice,setChoice,inventory,setInventory}) => {\n\n    const [delayed, setDelayed] = useState(false)\n    \n      const showPage = () => {\n        setPage(false)\n        console.log(setPage);\n    }\n    const showStory = () => {\n      setPage(true)\n      console.log(setPage);\n    }\n\n    const makeChoice : any = (number: number) => {\n      console.log(number)\n      setChoice(number)\n      console.log(choice)\n    }\n\n    \n    const currentLevel: any = (number: number) => {\n      setLevel(number)\n    }\n    \n    const storyResult = () => {\n      if (level === 1 && choice === 1){\n        setAttack(attack - 2)\n        console.log(attack)\n      }else if (level === 1 && choice === 2){\n        setAttack(attack + 5)\n        setHealth(health + 10)\n        setGold(gold + 10)\n      }\n    }\n    const handleBattle = (): any => {\n      const villain = villains[0];\n      let  villainHealth = villain[1];\n      const villainAttack = villain[2];\n      \n      // Simulating battle calculations\n      while (villainHealth > 0 && health > 0) {\n        if (Math.random() < accuracy) {\n          villainHealth -= attack;\n        }\n        health -= villainAttack;\n      }\n      \n      // Updating villain's health in state\n      setVillains((prevVillains) => {\n        const newVillains = [...prevVillains];\n        newVillains[0] = [villain[0], villainHealth, villainAttack];\n        return newVillains;\n      });\n      \n      // Check if user won the battle\n      if (health > 0) {\n        // User won the battle, give them a \"Potion of Health\" item\n        const potionIndex = items.findIndex((item) => item[0] === \"Potion of Health\");\n        if (potionIndex !== -1) {\n          setItems((prevItems) => {\n            const newItems = [...prevItems];\n            newItems.splice(potionIndex, 1);\n            return newItems;\n          });\n          setHealth(health + items[potionIndex][1]);\n        }\n      }\n    }\n    useEffect(()=> {\n      if(delayed) {\n        setTimeout(() => storyResult(), 1000)\n      }\n    },[delayed])\n\n  return (\n    <div className='Bottom'>\n      {level === 0 ?\n        <button onClick={() => {currentLevel(1)}}>Begin Quest</button>\n      \n      :null}\n\n      {level === 1 && choice === 0 ?\n      <>\n        <button onClick={() => {setChoice(1); setDelayed(true)}}>Choice One</button>\n        <button onClick={() => {makeChoice(2); setDelayed(true)}}>Choice Two</button>\n      \n      </>\n      :null}\n\n      {level === 1?\n        <button onClick={() => {currentLevel(2); setChoice(0)}}>Next</button>\n      \n      :null}\n\n\n      {level === 2 && choice === 0 ?\n      <>\n        <button onClick={() => {setChoice(1); setDelayed(true)}}>Choice One</button>\n        <button onClick={() => {makeChoice(2); setDelayed(true)}}>Choice Two</button>\n      \n      </>\n      :null}\n\n      {level === 2?\n        <button onClick={() => {currentLevel(3); setChoice(0)}}>Next</button>\n      \n      :null}\n\n      {level === 3?\n            <button onClick={handleBattle}> Battle</button>\n        :null}\n        {/* <button onClick={() => showStory()}> Go To Story</button>\n        <button onClick={() => showPage()}> Go To Store</button> */}\n    </div>\n  )\n}\n\nexport default Bottom"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}